package cjdns.cjdns_music;

///////////
// MUSIC
///////////

message MusicRecord {
  required string id = 1;
  optional string title = 2;
  optional bytes hash = 3;
  optional string ip = 4;

  optional uint64 bit_rate = 6;
  optional bool is_variable_bit_rate = 7 [default = false];
  optional uint64 file_size = 8;
  optional uint32 length = 9;

  optional MusicAlbum album = 12;
  repeated MusicArtist artist = 13;

  optional bool dirty = 21 [default = true];

  optional string file_path = 31;

  optional double weight = 61 [default = 0];
}

message MusicAlbum {
  required string id = 1;
  optional string title = 2;
  optional uint32 year = 3;
  repeated bytes poster_hash = 4;

  repeated MusicRecord record = 11;
  repeated MusicArtist artist = 13;

  optional bool multi_artist_compilation = 16 [default = false];

  optional bool dirty = 21 [default = true];
}

message MusicArtist {
  required string id = 1;
  optional string title = 2;

  repeated MusicAlbum album = 12;
  optional bool approved = 21 [default = false];
}

//////////////

message MusicRecordLocal {
  required string filename = 1;
  required uint64 last_modified = 2;
  required uint64 file_size = 3;
  optional MusicRecord music_record = 6;
}

//////////////
//
//////////////

message Bloom {
  required bytes bitset = 1;
  repeated uint32 factor = 2;
}

message NodeStatistic {
  required string ip = 1;

}

message FilterDirty {
  optional Bloom bloom = 1;
  optional uint32 free_slots = 2 [default = 0];
}

message FilterApproved {
  optional bytes bloom_filter = 1;
}

//////////////
// NETWORK
//////////////

message TransportPacket {
  message Ping {}

  message Pong {}

  message IpTouch {
    repeated string ip = 1;
  }

  message ApprovedHash {
    required string ip = 1;
    repeated bytes hash = 2;
  }
  message DirtyData {
    required string ip = 1;
    repeated MusicRecord record = 21;
  }
  message PublishData {
    required string ip = 1;
    repeated MusicRecord record = 21;
    repeated MusicAlbum album = 22;
    repeated MusicArtist artist = 23;
  }

  optional string message_id = 1;
  optional string session_id = 2;

  optional bytes compressed_packet = 5;
  optional Ping ping = 6;
  optional Pong pong = 7;
  optional IpTouch ip_touch = 8;

  optional ApprovedHash approved_hash = 11;
  optional DirtyData dirty_data = 12;
  optional PublishData publish_data = 13;

}